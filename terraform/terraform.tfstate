{
  "version": 4,
  "terraform_version": "1.12.2",
  "serial": 5,
  "lineage": "60b45fac-72bc-5f61-4801-3e312d52fe39",
  "outputs": {
    "bootstrap_script_path": {
      "value": "./../scripts/bootstrap.sh",
      "type": "string"
    },
    "hosts_file_path": {
      "value": "./../scripts/hosts",
      "type": "string"
    },
    "inventory_path": {
      "value": "./../ansible/inventory.ini",
      "type": "string"
    },
    "pull_images_script_path": {
      "value": "./../scripts/pull-images.sh",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "template_file",
      "name": "hosts",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "0fdc00077ef43f08487245f31cdaff9c13a625f4b22f862a0c9ce22cfc43f1d0",
            "rendered": "# Cloud-Native Gauntlet Local DNS Configuration\n# Add these entries to your /etc/hosts file for local development\n\n# Master node\n192.168.56.10 cn-master.local\n\n# Worker nodes (commented out for single VM setup)\n# 192.168.56.11 cn-worker1.local\n# 192.168.56.12 cn-worker2.local\n\n# Service endpoints (all pointing to master for now)\n192.168.56.10 keycloak.local\n192.168.56.10 gitea.local\n192.168.56.10 registry.local\n192.168.56.10 api.local\n192.168.56.10 argocd.local\n192.168.56.10 linkerd.local\n",
            "template": "# Cloud-Native Gauntlet Local DNS Configuration\n# Add these entries to your /etc/hosts file for local development\n\n# Master node\n${master_ip} cn-master.local\n\n# Worker nodes (commented out for single VM setup)\n# ${network_prefix}.11 cn-worker1.local\n# ${network_prefix}.12 cn-worker2.local\n\n# Service endpoints (all pointing to master for now)\n${master_ip} keycloak.local\n${master_ip} gitea.local\n${master_ip} registry.local\n${master_ip} api.local\n${master_ip} argocd.local\n${master_ip} linkerd.local\n",
            "vars": {
              "master_ip": "192.168.56.10",
              "network_prefix": "192.168.56"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "inventory",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "c428b1f1a812541573f0d5c78874ac799916188e62cd4f566ad8c7770a548639",
            "rendered": "# Cloud-Native Gauntlet Ansible Inventory\n# Generated by Terraform\n\n[all]\ncn-master ansible_host=192.168.56.10 ansible_user=vagrant ansible_ssh_private_key_file=.vagrant/machines/cn-master/virtualbox/private_key ansible_ssh_common_args='-o StrictHostKeyChecking=no'\n\n# Worker nodes (commented out for single VM setup)\n# cn-worker1 ansible_host=192.168.56.11 ansible_user=vagrant ansible_ssh_private_key_file=.vagrant/machines/cn-worker1/virtualbox/private_key ansible_ssh_common_args='-o StrictHostKeyChecking=no'\n\n[k3s_cluster:children]\nk3s_master\nk3s_workers\n\n[k3s_master]\ncn-master\n\n[k3s_workers]\n# cn-worker1\n\n[registry_nodes]\ncn-master\n\n[monitoring_nodes]\ncn-master\n\n[all:vars]\nansible_python_interpreter=/usr/bin/python3\n\n\n",
            "template": "# Cloud-Native Gauntlet Ansible Inventory\n# Generated by Terraform\n\n[all]\n${master_name} ansible_host=${master_ip} ansible_user=vagrant ansible_ssh_private_key_file=.vagrant/machines/${master_name}/virtualbox/private_key ansible_ssh_common_args='-o StrictHostKeyChecking=no'\n\n# Worker nodes (commented out for single VM setup)\n# cn-worker1 ansible_host=192.168.56.11 ansible_user=vagrant ansible_ssh_private_key_file=.vagrant/machines/cn-worker1/virtualbox/private_key ansible_ssh_common_args='-o StrictHostKeyChecking=no'\n\n[k3s_cluster:children]\nk3s_master\nk3s_workers\n\n[k3s_master]\n${master_name}\n\n[k3s_workers]\n# cn-worker1\n\n[registry_nodes]\n${master_name}\n\n[monitoring_nodes]\n${master_name}\n\n[all:vars]\nansible_python_interpreter=/usr/bin/python3\n\n\n",
            "vars": {
              "master_ip": "192.168.56.10",
              "master_name": "cn-master",
              "network_prefix": "192.168.56",
              "workers": "[{\"ip\":\"192.168.56.11\",\"name\":\"cn-worker1\",\"role\":\"worker\"}]"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "pull_images",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "2c9dd9cf9cb760c61ebbc744679f8326e1208c5bb3adad3a88d3521ce5c75d3c",
            "rendered": "#!/bin/bash\n# Cloud-Native Gauntlet: Offline Image Preparation Script\n# This script pulls all required images for offline deployment\n\nset -euo pipefail\n\necho \"=== Cloud-Native Gauntlet: Day 1-2 Image Preparation ===\"\necho \"Pulling required images for offline deployment...\"\n\n# Create images directory\nmkdir -p ./images\n\n# Images to pull\nIMAGES=(\n  \"rancher/k3s:v1.28.2-k3s1\"\n  \"quay.io/keycloak/keycloak:24.0.5\"\n  \"postgres:15\"\n  \"gitea/gitea:latest\"\n  \"registry:2\"\n  \"ghcr.io/cloudnative-pg/cloudnative-pg:1.26.0\"\n  \"quay.io/argoproj/argocd:latest\"\n  \"gcr.io/linkerd-io/proxy:stable-2.14.0\"\n  \"gcr.io/linkerd-io/controller:stable-2.14.0\"\n)\n\nfor image in \"${IMAGES[@]}\"; do\n    echo \"Pulling image: $image\"\n    docker pull \"$image\"\n    \n    # Save image to tar file\n    image_name=$(echo \"$image\" | tr '/' '-' | tr ':' '-')\n    docker save \"$image\" -o \"./images/${image_name}.tar\"\n    echo \"Saved: ./images/${image_name}.tar\"\ndone\n\necho \"=== Image preparation complete ===\"\necho \"Images saved in ./images/ directory\"\necho \"Total images: ${#IMAGES[@]}\"",
            "template": "#!/bin/bash\n# Cloud-Native Gauntlet: Offline Image Preparation Script\n# This script pulls all required images for offline deployment\n\nset -euo pipefail\n\necho \"=== Cloud-Native Gauntlet: Day 1-2 Image Preparation ===\"\necho \"Pulling required images for offline deployment...\"\n\n# Create images directory\nmkdir -p ./images\n\n# Images to pull\nIMAGES=(\n  \"rancher/k3s:v1.28.2-k3s1\"\n  \"quay.io/keycloak/keycloak:24.0.5\"\n  \"postgres:15\"\n  \"gitea/gitea:latest\"\n  \"registry:2\"\n  \"ghcr.io/cloudnative-pg/cloudnative-pg:1.26.0\"\n  \"quay.io/argoproj/argocd:latest\"\n  \"gcr.io/linkerd-io/proxy:stable-2.14.0\"\n  \"gcr.io/linkerd-io/controller:stable-2.14.0\"\n)\n\nfor image in \"$${IMAGES[@]}\"; do\n    echo \"Pulling image: $image\"\n    docker pull \"$image\"\n    \n    # Save image to tar file\n    image_name=$(echo \"$image\" | tr '/' '-' | tr ':' '-')\n    docker save \"$image\" -o \"./images/$${image_name}.tar\"\n    echo \"Saved: ./images/$${image_name}.tar\"\ndone\n\necho \"=== Image preparation complete ===\"\necho \"Images saved in ./images/ directory\"\necho \"Total images: $${#IMAGES[@]}\"",
            "vars": {
              "images": "[\"rancher/k3s:v1.28.2-k3s1\",\"rancher/k3s:v1.28.2-k3s1\",\"quay.io/keycloak/keycloak:24.0.5\",\"postgres:15\",\"gitea/gitea:latest\",\"registry:2\",\"ghcr.io/cloudnative-pg/cloudnative-pg:1.26.0\",\"quay.io/argoproj/argocd:latest\",\"gcr.io/linkerd-io/proxy:stable-2.14.0\",\"gcr.io/linkerd-io/controller:stable-2.14.0\"]"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "ansible_inventory",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "# Cloud-Native Gauntlet Ansible Inventory\n# Generated by Terraform\n\n[all]\ncn-master ansible_host=192.168.56.10 ansible_user=vagrant ansible_ssh_private_key_file=.vagrant/machines/cn-master/virtualbox/private_key ansible_ssh_common_args='-o StrictHostKeyChecking=no'\n\n# Worker nodes (commented out for single VM setup)\n# cn-worker1 ansible_host=192.168.56.11 ansible_user=vagrant ansible_ssh_private_key_file=.vagrant/machines/cn-worker1/virtualbox/private_key ansible_ssh_common_args='-o StrictHostKeyChecking=no'\n\n[k3s_cluster:children]\nk3s_master\nk3s_workers\n\n[k3s_master]\ncn-master\n\n[k3s_workers]\n# cn-worker1\n\n[registry_nodes]\ncn-master\n\n[monitoring_nodes]\ncn-master\n\n[all:vars]\nansible_python_interpreter=/usr/bin/python3\n\n\n",
            "content_base64": null,
            "content_base64sha256": "xCix8agSVBVz8NXHiHSseZkWGI5izU9WatjHdwpUhjk=",
            "content_base64sha512": "a+35pqiP6jUtFyMUzc1xQWPsYOVNVtzNpgrRr147/udefMlZDAf1pTpYzkUo/buQHbfEqDPaLPJ0WqxVcdj0eQ==",
            "content_md5": "ae9d4ee8be4ba6a8cf7e0f151f503322",
            "content_sha1": "cdb520b00ebe889e66da58a0fa1e9ee925c51ed5",
            "content_sha256": "c428b1f1a812541573f0d5c78874ac799916188e62cd4f566ad8c7770a548639",
            "content_sha512": "6bedf9a6a88fea352d172314cdcd714163ec60e54d56dccda60ad1af5e3bfee75e7cc9590c07f5a53a58ce4528fdbb901db7c4a833da2cf2745aac5571d8f479",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./../ansible/inventory.ini",
            "id": "cdb520b00ebe889e66da58a0fa1e9ee925c51ed5",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ]
          ],
          "identity_schema_version": 0,
          "dependencies": [
            "data.template_file.inventory"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "bootstrap_script",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "#!/bin/bash\n# Cloud-Native Gauntlet: Complete Bootstrap Script\n# This script sets up the entire environment from scratch\n\nset -euo pipefail\n\necho \"=== Cloud-Native Gauntlet: Complete Bootstrap ===\"\necho \"Starting Day 1-2 setup...\"\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nNC='\\033[0m' # No Color\n\nlog_info() {\n    echo -e \"\\033[0;32m[INFO]\\033[0m $1\"\n}\n\nlog_warn() {\n    echo -e \"\\033[1;33m[WARN]\\033[0m $1\"\n}\n\nlog_error() {\n    echo -e \"\\033[0;31m[ERROR]\\033[0m $1\"\n}\n\n# Check prerequisites\ncheck_prerequisites() {\n    log_info \"Checking prerequisites...\"\n    \n    if ! command -v vagrant \u0026\u003e /dev/null; then\n        log_error \"Vagrant is not installed. Please install Vagrant first.\"\n        exit 1\n    fi\n    \n    if ! command -v terraform \u0026\u003e /dev/null; then\n        log_error \"Terraform is not installed. Please install Terraform first.\"\n        exit 1\n    fi\n    \n    if ! command -v ansible \u0026\u003e /dev/null; then\n        log_error \"Ansible is not installed. Please install Ansible first.\"\n        exit 1\n    fi\n    \n    log_info \"All prerequisites satisfied\"\n}\n\n# Generate configuration files\ngenerate_configs() {\n    log_info \"Generating configuration files with Terraform...\"\n    cd terraform\n    terraform init\n    terraform apply -auto-approve\n    cd ..\n    log_info \"Configuration files generated\"\n}\n\n# Start VMs\nstart_vms() {\n    log_info \"Starting Vagrant VMs...\"\n    vagrant up\n    log_info \"VMs started successfully\"\n}\n\n# Setup local DNS\nsetup_dns() {\n    log_info \"Setting up local DNS...\"\n    \n    # Check if running on macOS\n    if [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n        log_warn \"macOS detected. Please manually add the following to /etc/hosts:\"\n        cat scripts/hosts\n        echo \"\"\n        log_warn \"Run: sudo nano /etc/hosts\"\n    else\n        log_info \"Adding entries to /etc/hosts (requires sudo)...\"\n        sudo cp scripts/hosts /etc/hosts.d/cloud-native-gauntlet\n        log_info \"DNS configuration added\"\n    fi\n}\n\n# Pull images\npull_images() {\n    log_info \"Pulling required images...\"\n    ./scripts/pull-images.sh\n    log_info \"Images pulled successfully\"\n}\n\n# Deploy with Ansible\ndeploy_with_ansible() {\n    log_info \"Deploying with Ansible...\"\n    cd ansible\n    ansible-playbook -i inventory.ini playbooks/base.yml\n    ansible-playbook -i inventory.ini playbooks/k3s.yml\n    cd ..\n    log_info \"Ansible deployment complete\"\n}\n\n# Main execution\nmain() {\n    log_info \"Starting Cloud-Native Gauntlet bootstrap...\"\n    \n    check_prerequisites\n    generate_configs\n    start_vms\n    setup_dns\n    pull_images\n    deploy_with_ansible\n    \n    log_info \"=== Bootstrap Complete ===\"\n    log_info \"Your Cloud-Native Gauntlet is ready!\"\n    log_info \"Master node: 192.168.56.10\"\n    log_info \"Access your services at:\"\n    log_info \"  - K3s Dashboard: https://192.168.56.10:6443\"\n    log_info \"  - Keycloak: http://keycloak.local\"\n    log_info \"  - Gitea: http://gitea.local\"\n    log_info \"  - Registry: http://registry.local\"\n}\n\n# Run main function\nmain \"$@\"\n",
            "content_base64": null,
            "content_base64sha256": "iK0/9u4SrINv9Zdcyh/Jd5F7m+y5G7Fnx3zNMGD3DrQ=",
            "content_base64sha512": "ayMATvmyNh0iHttvyMzDxnShEqoOnn5CBcFK6D/3M2hM3sPma4QX0gHr15qWXkZxk/K0DQ4S75XDuHyGOzaySA==",
            "content_md5": "643d40253909fb46456eab989d6a3fe3",
            "content_sha1": "d5e31e287d93d49104da812e5bc1d88fffa01092",
            "content_sha256": "88ad3ff6ee12ac836ff5975cca1fc977917b9becb91bb167c77ccd3060f70eb4",
            "content_sha512": "6b23004ef9b2361d221edb6fc8ccc3c674a112aa0e9e7e4205c14ae83ff733684cdec3e66b8417d201ebd79a965e467193f2b40d0e12ef95c3b87c863b36b248",
            "directory_permission": "0777",
            "file_permission": "0755",
            "filename": "./../scripts/bootstrap.sh",
            "id": "d5e31e287d93d49104da812e5bc1d88fffa01092",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ]
          ],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "hosts_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "# Cloud-Native Gauntlet Local DNS Configuration\n# Add these entries to your /etc/hosts file for local development\n\n# Master node\n192.168.56.10 cn-master.local\n\n# Worker nodes (commented out for single VM setup)\n# 192.168.56.11 cn-worker1.local\n# 192.168.56.12 cn-worker2.local\n\n# Service endpoints (all pointing to master for now)\n192.168.56.10 keycloak.local\n192.168.56.10 gitea.local\n192.168.56.10 registry.local\n192.168.56.10 api.local\n192.168.56.10 argocd.local\n192.168.56.10 linkerd.local\n",
            "content_base64": null,
            "content_base64sha256": "D9wAB370PwhIckXzHNr/nBOmJfSyL4YqDJziLPxD8dA=",
            "content_base64sha512": "0aSkRsyAfytGc6TZOJXl12s9TbdS6zd/SPaOt3NSr2tW/8bGdohW+vov6N+49GHde4du2oUC/YSC0+lKTkKy0A==",
            "content_md5": "3137037df52632ec78359778ea75b3a6",
            "content_sha1": "bd00b3e41f1068ada1e5e77d33fca2c41507c718",
            "content_sha256": "0fdc00077ef43f08487245f31cdaff9c13a625f4b22f862a0c9ce22cfc43f1d0",
            "content_sha512": "d1a4a446cc807f2b4673a4d93895e5d76b3d4db752eb377f48f68eb77352af6b56ffc6c6768856fafa2fe8dfb8f461dd7b876eda8502fd8482d3e94a4e42b2d0",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./../scripts/hosts",
            "id": "bd00b3e41f1068ada1e5e77d33fca2c41507c718",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ]
          ],
          "identity_schema_version": 0,
          "dependencies": [
            "data.template_file.hosts"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "pull_images_script",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "#!/bin/bash\n# Cloud-Native Gauntlet: Offline Image Preparation Script\n# This script pulls all required images for offline deployment\n\nset -euo pipefail\n\necho \"=== Cloud-Native Gauntlet: Day 1-2 Image Preparation ===\"\necho \"Pulling required images for offline deployment...\"\n\n# Create images directory\nmkdir -p ./images\n\n# Images to pull\nIMAGES=(\n  \"rancher/k3s:v1.28.2-k3s1\"\n  \"quay.io/keycloak/keycloak:24.0.5\"\n  \"postgres:15\"\n  \"gitea/gitea:latest\"\n  \"registry:2\"\n  \"ghcr.io/cloudnative-pg/cloudnative-pg:1.26.0\"\n  \"quay.io/argoproj/argocd:latest\"\n  \"gcr.io/linkerd-io/proxy:stable-2.14.0\"\n  \"gcr.io/linkerd-io/controller:stable-2.14.0\"\n)\n\nfor image in \"${IMAGES[@]}\"; do\n    echo \"Pulling image: $image\"\n    docker pull \"$image\"\n    \n    # Save image to tar file\n    image_name=$(echo \"$image\" | tr '/' '-' | tr ':' '-')\n    docker save \"$image\" -o \"./images/${image_name}.tar\"\n    echo \"Saved: ./images/${image_name}.tar\"\ndone\n\necho \"=== Image preparation complete ===\"\necho \"Images saved in ./images/ directory\"\necho \"Total images: ${#IMAGES[@]}\"",
            "content_base64": null,
            "content_base64sha256": "LJ3Zz5y3YMYeu8dEZ5+DJuEgjFuzra06iNNSHOXHXTw=",
            "content_base64sha512": "8Trw6et362hgCga18scXDkMnQQyXuYdiEkfxRc28NZePSJWIBEGszlxdzhby55dzZYNjybkhaR7e5x2WGoe/Aw==",
            "content_md5": "0e07d9b65b5ddcd4fd6d669c22cba575",
            "content_sha1": "1af20499beab5d9f60b4847deae63b79836df26e",
            "content_sha256": "2c9dd9cf9cb760c61ebbc744679f8326e1208c5bb3adad3a88d3521ce5c75d3c",
            "content_sha512": "f13af0e9eb77eb68600a06b5f2c7170e4327410c97b987621247f145cdbc35978f4895880441acce5c5dce16f2e79773658363c9b921691edee71d961a87bf03",
            "directory_permission": "0777",
            "file_permission": "0755",
            "filename": "./../scripts/pull-images.sh",
            "id": "1af20499beab5d9f60b4847deae63b79836df26e",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ]
          ],
          "identity_schema_version": 0,
          "dependencies": [
            "data.template_file.pull_images"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
